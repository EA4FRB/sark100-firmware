//*****************************************************************************
//*****************************************************************************
//  FILENAME: PWM8_BUZZ.h
//   Version: 2.5, Updated on 2009/6/24 at 12:16:54
//  Generated by PSoC Designer 5.0.972.0
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//               for the 22/24/27/29xxx PSoC family of devices
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress MicroSystems 2000-2004. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 PWM8_BUZZ_EnableInt
#pragma fastcall16 PWM8_BUZZ_DisableInt
#pragma fastcall16 PWM8_BUZZ_Start
#pragma fastcall16 PWM8_BUZZ_Stop
#pragma fastcall16 PWM8_BUZZ_bReadCounter              // Read  DR0
#pragma fastcall16 PWM8_BUZZ_WritePeriod               // Write DR1
#pragma fastcall16 PWM8_BUZZ_bReadPulseWidth           // Read  DR2
#pragma fastcall16 PWM8_BUZZ_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bPWM8_BUZZ_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bPWM8_BUZZ_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the PWM8_BUZZ API.
//-------------------------------------------------

extern void PWM8_BUZZ_EnableInt(void);                        // Proxy Class 1
extern void PWM8_BUZZ_DisableInt(void);                       // Proxy Class 1
extern void PWM8_BUZZ_Start(void);                            // Proxy Class 1
extern void PWM8_BUZZ_Stop(void);                             // Proxy Class 1
extern BYTE PWM8_BUZZ_bReadCounter(void);                     // Proxy Class 2
extern void PWM8_BUZZ_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE PWM8_BUZZ_bReadPulseWidth(void);                  // Proxy Class 1
extern void PWM8_BUZZ_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bPWM8_BUZZ_ReadCounter(void);            // Deprecated
extern BYTE bPWM8_BUZZ_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for PWM8_BUZZ API's.
//--------------------------------------------------

#define PWM8_BUZZ_CONTROL_REG_START_BIT        ( 0x01 )
#define PWM8_BUZZ_INT_REG_ADDR                 ( 0x0e1 )
#define PWM8_BUZZ_INT_MASK                     ( 0x20 )


//--------------------------------------------------
// Constants for PWM8_BUZZ user defined values
//--------------------------------------------------

#define PWM8_BUZZ_PERIOD                       ( 0x00 )
#define PWM8_BUZZ_PULSE_WIDTH                  ( 0x00 )


//-------------------------------------------------
// Register Addresses for PWM8_BUZZ
//-------------------------------------------------

#pragma ioport  PWM8_BUZZ_COUNTER_REG:  0x034              //DR0 Count register
BYTE            PWM8_BUZZ_COUNTER_REG;
#pragma ioport  PWM8_BUZZ_PERIOD_REG:   0x035              //DR1 Period register
BYTE            PWM8_BUZZ_PERIOD_REG;
#pragma ioport  PWM8_BUZZ_COMPARE_REG:  0x036              //DR2 Compare register
BYTE            PWM8_BUZZ_COMPARE_REG;
#pragma ioport  PWM8_BUZZ_CONTROL_REG:  0x037              //Control register
BYTE            PWM8_BUZZ_CONTROL_REG;
#pragma ioport  PWM8_BUZZ_FUNC_REG: 0x134                  //Function register
BYTE            PWM8_BUZZ_FUNC_REG;
#pragma ioport  PWM8_BUZZ_INPUT_REG:    0x135              //Input register
BYTE            PWM8_BUZZ_INPUT_REG;
#pragma ioport  PWM8_BUZZ_OUTPUT_REG:   0x136              //Output register
BYTE            PWM8_BUZZ_OUTPUT_REG;
#pragma ioport  PWM8_BUZZ_INT_REG:       0x0e1             //Interrupt Mask Register
BYTE            PWM8_BUZZ_INT_REG;


//-------------------------------------------------
// PWM8_BUZZ Macro 'Functions'
//-------------------------------------------------

#define PWM8_BUZZ_Start_M \
   PWM8_BUZZ_CONTROL_REG |=  PWM8_BUZZ_CONTROL_REG_START_BIT

#define PWM8_BUZZ_Stop_M  \
   PWM8_BUZZ_CONTROL_REG &= ~PWM8_BUZZ_CONTROL_REG_START_BIT

#define PWM8_BUZZ_EnableInt_M   \
   M8C_EnableIntMask(PWM8_BUZZ_INT_REG, PWM8_BUZZ_INT_MASK)

#define PWM8_BUZZ_DisableInt_M  \
   M8C_DisableIntMask(PWM8_BUZZ_INT_REG, PWM8_BUZZ_INT_MASK)


// end of file PWM8_BUZZ.h
