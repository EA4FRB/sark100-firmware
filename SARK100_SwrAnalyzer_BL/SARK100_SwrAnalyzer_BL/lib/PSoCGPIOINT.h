/******************************************************************************
*  Generated by PSoC Designer 
******************************************************************************/
#include <m8c.h>
// SPK address and mask defines
#pragma	ioport	SPK_Data_ADDR:	0x0
BYTE			SPK_Data_ADDR;
#pragma	ioport	SPK_DriveMode_0_ADDR:	0x100
BYTE			SPK_DriveMode_0_ADDR;
#pragma	ioport	SPK_DriveMode_1_ADDR:	0x101
BYTE			SPK_DriveMode_1_ADDR;
#pragma	ioport	SPK_DriveMode_2_ADDR:	0x3
BYTE			SPK_DriveMode_2_ADDR;
#pragma	ioport	SPK_GlobalSelect_ADDR:	0x2
BYTE			SPK_GlobalSelect_ADDR;
#pragma	ioport	SPK_IntCtrl_0_ADDR:	0x102
BYTE			SPK_IntCtrl_0_ADDR;
#pragma	ioport	SPK_IntCtrl_1_ADDR:	0x103
BYTE			SPK_IntCtrl_1_ADDR;
#pragma	ioport	SPK_IntEn_ADDR:	0x1
BYTE			SPK_IntEn_ADDR;
#define SPK_MASK 0x1
// VF address and mask defines
#pragma	ioport	VF_Data_ADDR:	0x0
BYTE			VF_Data_ADDR;
#pragma	ioport	VF_DriveMode_0_ADDR:	0x100
BYTE			VF_DriveMode_0_ADDR;
#pragma	ioport	VF_DriveMode_1_ADDR:	0x101
BYTE			VF_DriveMode_1_ADDR;
#pragma	ioport	VF_DriveMode_2_ADDR:	0x3
BYTE			VF_DriveMode_2_ADDR;
#pragma	ioport	VF_GlobalSelect_ADDR:	0x2
BYTE			VF_GlobalSelect_ADDR;
#pragma	ioport	VF_IntCtrl_0_ADDR:	0x102
BYTE			VF_IntCtrl_0_ADDR;
#pragma	ioport	VF_IntCtrl_1_ADDR:	0x103
BYTE			VF_IntCtrl_1_ADDR;
#pragma	ioport	VF_IntEn_ADDR:	0x1
BYTE			VF_IntEn_ADDR;
#define VF_MASK 0x2
// DDS_RSET address and mask defines
#pragma	ioport	DDS_RSET_Data_ADDR:	0x0
BYTE			DDS_RSET_Data_ADDR;
#pragma	ioport	DDS_RSET_DriveMode_0_ADDR:	0x100
BYTE			DDS_RSET_DriveMode_0_ADDR;
#pragma	ioport	DDS_RSET_DriveMode_1_ADDR:	0x101
BYTE			DDS_RSET_DriveMode_1_ADDR;
#pragma	ioport	DDS_RSET_DriveMode_2_ADDR:	0x3
BYTE			DDS_RSET_DriveMode_2_ADDR;
#pragma	ioport	DDS_RSET_GlobalSelect_ADDR:	0x2
BYTE			DDS_RSET_GlobalSelect_ADDR;
#pragma	ioport	DDS_RSET_IntCtrl_0_ADDR:	0x102
BYTE			DDS_RSET_IntCtrl_0_ADDR;
#pragma	ioport	DDS_RSET_IntCtrl_1_ADDR:	0x103
BYTE			DDS_RSET_IntCtrl_1_ADDR;
#pragma	ioport	DDS_RSET_IntEn_ADDR:	0x1
BYTE			DDS_RSET_IntEn_ADDR;
#define DDS_RSET_MASK 0x4
// VR address and mask defines
#pragma	ioport	VR_Data_ADDR:	0x0
BYTE			VR_Data_ADDR;
#pragma	ioport	VR_DriveMode_0_ADDR:	0x100
BYTE			VR_DriveMode_0_ADDR;
#pragma	ioport	VR_DriveMode_1_ADDR:	0x101
BYTE			VR_DriveMode_1_ADDR;
#pragma	ioport	VR_DriveMode_2_ADDR:	0x3
BYTE			VR_DriveMode_2_ADDR;
#pragma	ioport	VR_GlobalSelect_ADDR:	0x2
BYTE			VR_GlobalSelect_ADDR;
#pragma	ioport	VR_IntCtrl_0_ADDR:	0x102
BYTE			VR_IntCtrl_0_ADDR;
#pragma	ioport	VR_IntCtrl_1_ADDR:	0x103
BYTE			VR_IntCtrl_1_ADDR;
#pragma	ioport	VR_IntEn_ADDR:	0x1
BYTE			VR_IntEn_ADDR;
#define VR_MASK 0x8
// TX_USB address and mask defines
#pragma	ioport	TX_USB_Data_ADDR:	0x0
BYTE			TX_USB_Data_ADDR;
#pragma	ioport	TX_USB_DriveMode_0_ADDR:	0x100
BYTE			TX_USB_DriveMode_0_ADDR;
#pragma	ioport	TX_USB_DriveMode_1_ADDR:	0x101
BYTE			TX_USB_DriveMode_1_ADDR;
#pragma	ioport	TX_USB_DriveMode_2_ADDR:	0x3
BYTE			TX_USB_DriveMode_2_ADDR;
#pragma	ioport	TX_USB_GlobalSelect_ADDR:	0x2
BYTE			TX_USB_GlobalSelect_ADDR;
#pragma	ioport	TX_USB_IntCtrl_0_ADDR:	0x102
BYTE			TX_USB_IntCtrl_0_ADDR;
#pragma	ioport	TX_USB_IntCtrl_1_ADDR:	0x103
BYTE			TX_USB_IntCtrl_1_ADDR;
#pragma	ioport	TX_USB_IntEn_ADDR:	0x1
BYTE			TX_USB_IntEn_ADDR;
#define TX_USB_MASK 0x10
// VZ address and mask defines
#pragma	ioport	VZ_Data_ADDR:	0x0
BYTE			VZ_Data_ADDR;
#pragma	ioport	VZ_DriveMode_0_ADDR:	0x100
BYTE			VZ_DriveMode_0_ADDR;
#pragma	ioport	VZ_DriveMode_1_ADDR:	0x101
BYTE			VZ_DriveMode_1_ADDR;
#pragma	ioport	VZ_DriveMode_2_ADDR:	0x3
BYTE			VZ_DriveMode_2_ADDR;
#pragma	ioport	VZ_GlobalSelect_ADDR:	0x2
BYTE			VZ_GlobalSelect_ADDR;
#pragma	ioport	VZ_IntCtrl_0_ADDR:	0x102
BYTE			VZ_IntCtrl_0_ADDR;
#pragma	ioport	VZ_IntCtrl_1_ADDR:	0x103
BYTE			VZ_IntCtrl_1_ADDR;
#pragma	ioport	VZ_IntEn_ADDR:	0x1
BYTE			VZ_IntEn_ADDR;
#define VZ_MASK 0x20
// COL2 address and mask defines
#pragma	ioport	COL2_Data_ADDR:	0x0
BYTE			COL2_Data_ADDR;
#pragma	ioport	COL2_DriveMode_0_ADDR:	0x100
BYTE			COL2_DriveMode_0_ADDR;
#pragma	ioport	COL2_DriveMode_1_ADDR:	0x101
BYTE			COL2_DriveMode_1_ADDR;
#pragma	ioport	COL2_DriveMode_2_ADDR:	0x3
BYTE			COL2_DriveMode_2_ADDR;
#pragma	ioport	COL2_GlobalSelect_ADDR:	0x2
BYTE			COL2_GlobalSelect_ADDR;
#pragma	ioport	COL2_IntCtrl_0_ADDR:	0x102
BYTE			COL2_IntCtrl_0_ADDR;
#pragma	ioport	COL2_IntCtrl_1_ADDR:	0x103
BYTE			COL2_IntCtrl_1_ADDR;
#pragma	ioport	COL2_IntEn_ADDR:	0x1
BYTE			COL2_IntEn_ADDR;
#define COL2_MASK 0x40
// VA address and mask defines
#pragma	ioport	VA_Data_ADDR:	0x0
BYTE			VA_Data_ADDR;
#pragma	ioport	VA_DriveMode_0_ADDR:	0x100
BYTE			VA_DriveMode_0_ADDR;
#pragma	ioport	VA_DriveMode_1_ADDR:	0x101
BYTE			VA_DriveMode_1_ADDR;
#pragma	ioport	VA_DriveMode_2_ADDR:	0x3
BYTE			VA_DriveMode_2_ADDR;
#pragma	ioport	VA_GlobalSelect_ADDR:	0x2
BYTE			VA_GlobalSelect_ADDR;
#pragma	ioport	VA_IntCtrl_0_ADDR:	0x102
BYTE			VA_IntCtrl_0_ADDR;
#pragma	ioport	VA_IntCtrl_1_ADDR:	0x103
BYTE			VA_IntCtrl_1_ADDR;
#pragma	ioport	VA_IntEn_ADDR:	0x1
BYTE			VA_IntEn_ADDR;
#define VA_MASK 0x80
// ROW1 address and mask defines
#pragma	ioport	ROW1_Data_ADDR:	0x4
BYTE			ROW1_Data_ADDR;
#pragma	ioport	ROW1_DriveMode_0_ADDR:	0x104
BYTE			ROW1_DriveMode_0_ADDR;
#pragma	ioport	ROW1_DriveMode_1_ADDR:	0x105
BYTE			ROW1_DriveMode_1_ADDR;
#pragma	ioport	ROW1_DriveMode_2_ADDR:	0x7
BYTE			ROW1_DriveMode_2_ADDR;
#pragma	ioport	ROW1_GlobalSelect_ADDR:	0x6
BYTE			ROW1_GlobalSelect_ADDR;
#pragma	ioport	ROW1_IntCtrl_0_ADDR:	0x106
BYTE			ROW1_IntCtrl_0_ADDR;
#pragma	ioport	ROW1_IntCtrl_1_ADDR:	0x107
BYTE			ROW1_IntCtrl_1_ADDR;
#pragma	ioport	ROW1_IntEn_ADDR:	0x5
BYTE			ROW1_IntEn_ADDR;
#define ROW1_MASK 0x1
// ROW0 address and mask defines
#pragma	ioport	ROW0_Data_ADDR:	0x4
BYTE			ROW0_Data_ADDR;
#pragma	ioport	ROW0_DriveMode_0_ADDR:	0x104
BYTE			ROW0_DriveMode_0_ADDR;
#pragma	ioport	ROW0_DriveMode_1_ADDR:	0x105
BYTE			ROW0_DriveMode_1_ADDR;
#pragma	ioport	ROW0_DriveMode_2_ADDR:	0x7
BYTE			ROW0_DriveMode_2_ADDR;
#pragma	ioport	ROW0_GlobalSelect_ADDR:	0x6
BYTE			ROW0_GlobalSelect_ADDR;
#pragma	ioport	ROW0_IntCtrl_0_ADDR:	0x106
BYTE			ROW0_IntCtrl_0_ADDR;
#pragma	ioport	ROW0_IntCtrl_1_ADDR:	0x107
BYTE			ROW0_IntCtrl_1_ADDR;
#pragma	ioport	ROW0_IntEn_ADDR:	0x5
BYTE			ROW0_IntEn_ADDR;
#define ROW0_MASK 0x2
// DDS_LOAD address and mask defines
#pragma	ioport	DDS_LOAD_Data_ADDR:	0x4
BYTE			DDS_LOAD_Data_ADDR;
#pragma	ioport	DDS_LOAD_DriveMode_0_ADDR:	0x104
BYTE			DDS_LOAD_DriveMode_0_ADDR;
#pragma	ioport	DDS_LOAD_DriveMode_1_ADDR:	0x105
BYTE			DDS_LOAD_DriveMode_1_ADDR;
#pragma	ioport	DDS_LOAD_DriveMode_2_ADDR:	0x7
BYTE			DDS_LOAD_DriveMode_2_ADDR;
#pragma	ioport	DDS_LOAD_GlobalSelect_ADDR:	0x6
BYTE			DDS_LOAD_GlobalSelect_ADDR;
#pragma	ioport	DDS_LOAD_IntCtrl_0_ADDR:	0x106
BYTE			DDS_LOAD_IntCtrl_0_ADDR;
#pragma	ioport	DDS_LOAD_IntCtrl_1_ADDR:	0x107
BYTE			DDS_LOAD_IntCtrl_1_ADDR;
#pragma	ioport	DDS_LOAD_IntEn_ADDR:	0x5
BYTE			DDS_LOAD_IntEn_ADDR;
#define DDS_LOAD_MASK 0x4
// RX_USB address and mask defines
#pragma	ioport	RX_USB_Data_ADDR:	0x4
BYTE			RX_USB_Data_ADDR;
#pragma	ioport	RX_USB_DriveMode_0_ADDR:	0x104
BYTE			RX_USB_DriveMode_0_ADDR;
#pragma	ioport	RX_USB_DriveMode_1_ADDR:	0x105
BYTE			RX_USB_DriveMode_1_ADDR;
#pragma	ioport	RX_USB_DriveMode_2_ADDR:	0x7
BYTE			RX_USB_DriveMode_2_ADDR;
#pragma	ioport	RX_USB_GlobalSelect_ADDR:	0x6
BYTE			RX_USB_GlobalSelect_ADDR;
#pragma	ioport	RX_USB_IntCtrl_0_ADDR:	0x106
BYTE			RX_USB_IntCtrl_0_ADDR;
#pragma	ioport	RX_USB_IntCtrl_1_ADDR:	0x107
BYTE			RX_USB_IntCtrl_1_ADDR;
#pragma	ioport	RX_USB_IntEn_ADDR:	0x5
BYTE			RX_USB_IntEn_ADDR;
#define RX_USB_MASK 0x8
// DDS_DATA address and mask defines
#pragma	ioport	DDS_DATA_Data_ADDR:	0x4
BYTE			DDS_DATA_Data_ADDR;
#pragma	ioport	DDS_DATA_DriveMode_0_ADDR:	0x104
BYTE			DDS_DATA_DriveMode_0_ADDR;
#pragma	ioport	DDS_DATA_DriveMode_1_ADDR:	0x105
BYTE			DDS_DATA_DriveMode_1_ADDR;
#pragma	ioport	DDS_DATA_DriveMode_2_ADDR:	0x7
BYTE			DDS_DATA_DriveMode_2_ADDR;
#pragma	ioport	DDS_DATA_GlobalSelect_ADDR:	0x6
BYTE			DDS_DATA_GlobalSelect_ADDR;
#pragma	ioport	DDS_DATA_IntCtrl_0_ADDR:	0x106
BYTE			DDS_DATA_IntCtrl_0_ADDR;
#pragma	ioport	DDS_DATA_IntCtrl_1_ADDR:	0x107
BYTE			DDS_DATA_IntCtrl_1_ADDR;
#pragma	ioport	DDS_DATA_IntEn_ADDR:	0x5
BYTE			DDS_DATA_IntEn_ADDR;
#define DDS_DATA_MASK 0x10
// COL1 address and mask defines
#pragma	ioport	COL1_Data_ADDR:	0x4
BYTE			COL1_Data_ADDR;
#pragma	ioport	COL1_DriveMode_0_ADDR:	0x104
BYTE			COL1_DriveMode_0_ADDR;
#pragma	ioport	COL1_DriveMode_1_ADDR:	0x105
BYTE			COL1_DriveMode_1_ADDR;
#pragma	ioport	COL1_DriveMode_2_ADDR:	0x7
BYTE			COL1_DriveMode_2_ADDR;
#pragma	ioport	COL1_GlobalSelect_ADDR:	0x6
BYTE			COL1_GlobalSelect_ADDR;
#pragma	ioport	COL1_IntCtrl_0_ADDR:	0x106
BYTE			COL1_IntCtrl_0_ADDR;
#pragma	ioport	COL1_IntCtrl_1_ADDR:	0x107
BYTE			COL1_IntCtrl_1_ADDR;
#pragma	ioport	COL1_IntEn_ADDR:	0x5
BYTE			COL1_IntEn_ADDR;
#define COL1_MASK 0x20
// DDS_CLK address and mask defines
#pragma	ioport	DDS_CLK_Data_ADDR:	0x4
BYTE			DDS_CLK_Data_ADDR;
#pragma	ioport	DDS_CLK_DriveMode_0_ADDR:	0x104
BYTE			DDS_CLK_DriveMode_0_ADDR;
#pragma	ioport	DDS_CLK_DriveMode_1_ADDR:	0x105
BYTE			DDS_CLK_DriveMode_1_ADDR;
#pragma	ioport	DDS_CLK_DriveMode_2_ADDR:	0x7
BYTE			DDS_CLK_DriveMode_2_ADDR;
#pragma	ioport	DDS_CLK_GlobalSelect_ADDR:	0x6
BYTE			DDS_CLK_GlobalSelect_ADDR;
#pragma	ioport	DDS_CLK_IntCtrl_0_ADDR:	0x106
BYTE			DDS_CLK_IntCtrl_0_ADDR;
#pragma	ioport	DDS_CLK_IntCtrl_1_ADDR:	0x107
BYTE			DDS_CLK_IntCtrl_1_ADDR;
#pragma	ioport	DDS_CLK_IntEn_ADDR:	0x5
BYTE			DDS_CLK_IntEn_ADDR;
#define DDS_CLK_MASK 0x40
// COL0 address and mask defines
#pragma	ioport	COL0_Data_ADDR:	0x4
BYTE			COL0_Data_ADDR;
#pragma	ioport	COL0_DriveMode_0_ADDR:	0x104
BYTE			COL0_DriveMode_0_ADDR;
#pragma	ioport	COL0_DriveMode_1_ADDR:	0x105
BYTE			COL0_DriveMode_1_ADDR;
#pragma	ioport	COL0_DriveMode_2_ADDR:	0x7
BYTE			COL0_DriveMode_2_ADDR;
#pragma	ioport	COL0_GlobalSelect_ADDR:	0x6
BYTE			COL0_GlobalSelect_ADDR;
#pragma	ioport	COL0_IntCtrl_0_ADDR:	0x106
BYTE			COL0_IntCtrl_0_ADDR;
#pragma	ioport	COL0_IntCtrl_1_ADDR:	0x107
BYTE			COL0_IntCtrl_1_ADDR;
#pragma	ioport	COL0_IntEn_ADDR:	0x5
BYTE			COL0_IntEn_ADDR;
#define COL0_MASK 0x80
// LCDD4 address and mask defines
#pragma	ioport	LCDD4_Data_ADDR:	0x8
BYTE			LCDD4_Data_ADDR;
#pragma	ioport	LCDD4_DriveMode_0_ADDR:	0x108
BYTE			LCDD4_DriveMode_0_ADDR;
#pragma	ioport	LCDD4_DriveMode_1_ADDR:	0x109
BYTE			LCDD4_DriveMode_1_ADDR;
#pragma	ioport	LCDD4_DriveMode_2_ADDR:	0xb
BYTE			LCDD4_DriveMode_2_ADDR;
#pragma	ioport	LCDD4_GlobalSelect_ADDR:	0xa
BYTE			LCDD4_GlobalSelect_ADDR;
#pragma	ioport	LCDD4_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD4_IntCtrl_0_ADDR;
#pragma	ioport	LCDD4_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD4_IntCtrl_1_ADDR;
#pragma	ioport	LCDD4_IntEn_ADDR:	0x9
BYTE			LCDD4_IntEn_ADDR;
#define LCDD4_MASK 0x1
// LCDD4 Shadow defines
//   LCDD4_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD4_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD4_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD4_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD4_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD4_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD5 address and mask defines
#pragma	ioport	LCDD5_Data_ADDR:	0x8
BYTE			LCDD5_Data_ADDR;
#pragma	ioport	LCDD5_DriveMode_0_ADDR:	0x108
BYTE			LCDD5_DriveMode_0_ADDR;
#pragma	ioport	LCDD5_DriveMode_1_ADDR:	0x109
BYTE			LCDD5_DriveMode_1_ADDR;
#pragma	ioport	LCDD5_DriveMode_2_ADDR:	0xb
BYTE			LCDD5_DriveMode_2_ADDR;
#pragma	ioport	LCDD5_GlobalSelect_ADDR:	0xa
BYTE			LCDD5_GlobalSelect_ADDR;
#pragma	ioport	LCDD5_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD5_IntCtrl_0_ADDR;
#pragma	ioport	LCDD5_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD5_IntCtrl_1_ADDR;
#pragma	ioport	LCDD5_IntEn_ADDR:	0x9
BYTE			LCDD5_IntEn_ADDR;
#define LCDD5_MASK 0x2
// LCDD5 Shadow defines
//   LCDD5_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD5_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD5_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD5_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD5_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD5_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD6 address and mask defines
#pragma	ioport	LCDD6_Data_ADDR:	0x8
BYTE			LCDD6_Data_ADDR;
#pragma	ioport	LCDD6_DriveMode_0_ADDR:	0x108
BYTE			LCDD6_DriveMode_0_ADDR;
#pragma	ioport	LCDD6_DriveMode_1_ADDR:	0x109
BYTE			LCDD6_DriveMode_1_ADDR;
#pragma	ioport	LCDD6_DriveMode_2_ADDR:	0xb
BYTE			LCDD6_DriveMode_2_ADDR;
#pragma	ioport	LCDD6_GlobalSelect_ADDR:	0xa
BYTE			LCDD6_GlobalSelect_ADDR;
#pragma	ioport	LCDD6_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD6_IntCtrl_0_ADDR;
#pragma	ioport	LCDD6_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD6_IntCtrl_1_ADDR;
#pragma	ioport	LCDD6_IntEn_ADDR:	0x9
BYTE			LCDD6_IntEn_ADDR;
#define LCDD6_MASK 0x4
// LCDD6 Shadow defines
//   LCDD6_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD6_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD6_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD6_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD6_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD6_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD7 address and mask defines
#pragma	ioport	LCDD7_Data_ADDR:	0x8
BYTE			LCDD7_Data_ADDR;
#pragma	ioport	LCDD7_DriveMode_0_ADDR:	0x108
BYTE			LCDD7_DriveMode_0_ADDR;
#pragma	ioport	LCDD7_DriveMode_1_ADDR:	0x109
BYTE			LCDD7_DriveMode_1_ADDR;
#pragma	ioport	LCDD7_DriveMode_2_ADDR:	0xb
BYTE			LCDD7_DriveMode_2_ADDR;
#pragma	ioport	LCDD7_GlobalSelect_ADDR:	0xa
BYTE			LCDD7_GlobalSelect_ADDR;
#pragma	ioport	LCDD7_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD7_IntCtrl_0_ADDR;
#pragma	ioport	LCDD7_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD7_IntCtrl_1_ADDR;
#pragma	ioport	LCDD7_IntEn_ADDR:	0x9
BYTE			LCDD7_IntEn_ADDR;
#define LCDD7_MASK 0x8
// LCDD7 Shadow defines
//   LCDD7_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD7_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD7_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD7_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD7_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD7_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDE address and mask defines
#pragma	ioport	LCDE_Data_ADDR:	0x8
BYTE			LCDE_Data_ADDR;
#pragma	ioport	LCDE_DriveMode_0_ADDR:	0x108
BYTE			LCDE_DriveMode_0_ADDR;
#pragma	ioport	LCDE_DriveMode_1_ADDR:	0x109
BYTE			LCDE_DriveMode_1_ADDR;
#pragma	ioport	LCDE_DriveMode_2_ADDR:	0xb
BYTE			LCDE_DriveMode_2_ADDR;
#pragma	ioport	LCDE_GlobalSelect_ADDR:	0xa
BYTE			LCDE_GlobalSelect_ADDR;
#pragma	ioport	LCDE_IntCtrl_0_ADDR:	0x10a
BYTE			LCDE_IntCtrl_0_ADDR;
#pragma	ioport	LCDE_IntCtrl_1_ADDR:	0x10b
BYTE			LCDE_IntCtrl_1_ADDR;
#pragma	ioport	LCDE_IntEn_ADDR:	0x9
BYTE			LCDE_IntEn_ADDR;
#define LCDE_MASK 0x10
// LCDE Shadow defines
//   LCDE_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDE_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDE_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDE_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDE_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDE_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDRS address and mask defines
#pragma	ioport	LCDRS_Data_ADDR:	0x8
BYTE			LCDRS_Data_ADDR;
#pragma	ioport	LCDRS_DriveMode_0_ADDR:	0x108
BYTE			LCDRS_DriveMode_0_ADDR;
#pragma	ioport	LCDRS_DriveMode_1_ADDR:	0x109
BYTE			LCDRS_DriveMode_1_ADDR;
#pragma	ioport	LCDRS_DriveMode_2_ADDR:	0xb
BYTE			LCDRS_DriveMode_2_ADDR;
#pragma	ioport	LCDRS_GlobalSelect_ADDR:	0xa
BYTE			LCDRS_GlobalSelect_ADDR;
#pragma	ioport	LCDRS_IntCtrl_0_ADDR:	0x10a
BYTE			LCDRS_IntCtrl_0_ADDR;
#pragma	ioport	LCDRS_IntCtrl_1_ADDR:	0x10b
BYTE			LCDRS_IntCtrl_1_ADDR;
#pragma	ioport	LCDRS_IntEn_ADDR:	0x9
BYTE			LCDRS_IntEn_ADDR;
#define LCDRS_MASK 0x20
// LCDRS Shadow defines
//   LCDRS_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDRS_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDRS_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDRS_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDRS_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDRS_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDRW address and mask defines
#pragma	ioport	LCDRW_Data_ADDR:	0x8
BYTE			LCDRW_Data_ADDR;
#pragma	ioport	LCDRW_DriveMode_0_ADDR:	0x108
BYTE			LCDRW_DriveMode_0_ADDR;
#pragma	ioport	LCDRW_DriveMode_1_ADDR:	0x109
BYTE			LCDRW_DriveMode_1_ADDR;
#pragma	ioport	LCDRW_DriveMode_2_ADDR:	0xb
BYTE			LCDRW_DriveMode_2_ADDR;
#pragma	ioport	LCDRW_GlobalSelect_ADDR:	0xa
BYTE			LCDRW_GlobalSelect_ADDR;
#pragma	ioport	LCDRW_IntCtrl_0_ADDR:	0x10a
BYTE			LCDRW_IntCtrl_0_ADDR;
#pragma	ioport	LCDRW_IntCtrl_1_ADDR:	0x10b
BYTE			LCDRW_IntCtrl_1_ADDR;
#pragma	ioport	LCDRW_IntEn_ADDR:	0x9
BYTE			LCDRW_IntEn_ADDR;
#define LCDRW_MASK 0x40
// LCDRW Shadow defines
//   LCDRW_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDRW_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDRW_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDRW_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDRW_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDRW_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// XO_EN address and mask defines
#pragma	ioport	XO_EN_Data_ADDR:	0x8
BYTE			XO_EN_Data_ADDR;
#pragma	ioport	XO_EN_DriveMode_0_ADDR:	0x108
BYTE			XO_EN_DriveMode_0_ADDR;
#pragma	ioport	XO_EN_DriveMode_1_ADDR:	0x109
BYTE			XO_EN_DriveMode_1_ADDR;
#pragma	ioport	XO_EN_DriveMode_2_ADDR:	0xb
BYTE			XO_EN_DriveMode_2_ADDR;
#pragma	ioport	XO_EN_GlobalSelect_ADDR:	0xa
BYTE			XO_EN_GlobalSelect_ADDR;
#pragma	ioport	XO_EN_IntCtrl_0_ADDR:	0x10a
BYTE			XO_EN_IntCtrl_0_ADDR;
#pragma	ioport	XO_EN_IntCtrl_1_ADDR:	0x10b
BYTE			XO_EN_IntCtrl_1_ADDR;
#pragma	ioport	XO_EN_IntEn_ADDR:	0x9
BYTE			XO_EN_IntEn_ADDR;
#define XO_EN_MASK 0x80
// XO_EN Shadow defines
//   XO_EN_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define XO_EN_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   XO_EN_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define XO_EN_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   XO_EN_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define XO_EN_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
